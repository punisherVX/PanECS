# panw logstash.conf version: beta0.0.1
# panos version: 9.0.1 
# credits: 
#
# this file is based on PANOS 9.0 documentation found at this link
# https://docs.paloaltonetworks.com/pan-os/9-0/pan-os-admin/monitoring/use-syslog-for-monitoring/syslog-field-descriptions.html
# this file covers; traffic, threat, url, wildfire, tunnel, HIP Match, userID, system and config logs at this time.  to be added IP-tag,SCTP, Correlated,Authentication
# escape sequences note from panos docs: Any field that contains a comma or a double-quote is enclosed in double quotes. Furthermore, if a double-quote appears inside a field it is escaped by preceding it with another double-quote. To maintain backward compatibility, the Misc field in threat log is always enclosed in double-quotes.
# 
# dev notes: we decided to break each syslog logstream into separate udp ports, this can be changed to suite your enviroment.  having separate allows future break outs. like system and config going to a different ELK stack for example.
#
# inline dev notes on field definitions: 
#		rmvd (this field has been removed)
#		ecs  (this field meets ELASTICSEARCH ECS standards.  reference: https://github.com/elastic/ecs
#		cstm (this field is not in ECS, and is defined by us devs)
#		aecs (almost ecs, not an ECS standard, but followed closely. submitting to ECS to make part of the standard.)
#  cstm+rmvd (removed this field, you may want it if you use device_group_hierarchy or SCTP features. just edit out the '?' if need this field)
#  rmvd+later(this is just a tempary field that is removed later by the remove field function
#
# dev to do list:
# 	a.) fix error in: panw.session_start_time
#	b.) split domain and user.name
#   c.) protect guility in logs remove/rename names
#   d.) flags and action flags expanded
#
#
input {	
	udp {
		port => 5549
		type => "panw.traps"
	}	
	udp {
		port => 5550
		type => "panw.traffic"
	}
	udp {
		port => 5551
		type => "panw.threat"
	}
	udp {
		port => 5552
		type => "panw.url"
	}
	udp {
		port => 5553
		type => "panw.wildfire"
	}
	udp {
		port => 5554
		type => "panw.datafiltering"
	}
	udp {
		port => 5555
		type => "panw.userid"
	}
	udp {
		port => 5556
		type => "panw.tunnel"
	}
	udp {
		port => 5557
		type => "panw.HIPlog"
	}
	udp {
		port => 5558
		type => "panos.system"
	}
	udp {
		port => 5559
		type => "panos.config"
	}		
}
#
#
filter {
	if [type] == "panw.traffic" {
		dissect {
      		mapping => {
        	"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.log_subtype},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{network.bytes},%{destination.bytes},%{source.bytes},%{network.packets},%{panw.session_start_time},%{event.duration},%{url.category},%{?FUTURE_USE},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{destination.packets},%{source.packets},%{panw.session_end_reason},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{panw.action_source},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{?panw.SCTP_association_ID},%{?panw.SCTP_chunks},%{?panw.SCTP_chunks_sent},%{?panw.SCTP_chunks_received}"
			}
    	}
        mutate {
            convert => [ "network.bytes", "integer" ]
            convert => [ "source.bytes", "integer" ]
            convert => [ "destination.bytes", "integer" ]
            convert => [ "event.duration", "integer" ]
			convert => [ "destination.port", "integer" ]
            convert => [ "source.port", "integer" ]
			convert => [ "panw.session_id", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
            convert => [ "destination.nat.port", "integer" ]
            convert => [ "source.nat.port", "integer" ]
            convert => [ "network.packets", "integer" ]
            convert => [ "source.packets", "integer" ]
            convert => [ "destination.packets", "integer" ]
            convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]
		}
	}
	if [type] == "panw.threat" {
		dissect {
      		mapping => {
			"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{event.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE},%{?panw.SCTP_association_ID},%{panw.payload_protocol_ID},%{http.headers}"
			}
    	}
		mutate {
				convert => [ "destination.port", "integer" ]
				convert => [ "source.port", "integer" ]
				convert => [ "panw.session_id", "integer" ]
				convert => [ "event.repeat_count", "integer" ]
                convert => [ "destination.nat.port", "integer" ]
                convert => [ "source.nat.port", "integer" ]
                convert => [ "panw.sequence_number", "integer" ]
				remove_field => [ "message", "host"]
		}
	}
	if [type] == "panw.url" {
		dissect {
      		mapping => {
				"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{event.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE},%{?panw.SCTP_association_ID},%{panw.payload_protocol_ID},%{?FUTURE_USE},%{url.category1},%{url.category2},%{?FUTURE_USE}"
			}
    	}
		mutate {
#               removing double quotes from URL values
                gsub => [ "url.full", "\"","" ]
				gsub => [ "url.category1", "\"", "" ]
				gsub => [ "url.category2", "\"", "" ]				
				convert => [ "destination.port", "integer" ]
				convert => [ "source.port", "integer" ]
				convert => [ "panw.session_id", "integer" ]
				convert => [ "event.repeat_count", "integer" ]
                convert => [ "destination.nat.port", "integer" ]
                convert => [ "source.nat.port", "integer" ]
                convert => [ "panw.sequence_number", "integer" ]
				remove_field => [ "message", "host"]
		}
	}
	if [type] == "panw.wildfire" {
		dissect {
      		mapping => {
			"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{event.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE},%{?panw.SCTP_association_ID},%{panw.payload_protocol_ID},%{http.headers}"
			}
    	}
		mutate {
				convert => [ "destination.port", "integer" ]
				convert => [ "source.port", "integer" ]
				convert => [ "panw.session_id", "integer" ]
				convert => [ "event.repeat_count", "integer" ]
                convert => [ "destination.nat.port", "integer" ]
                convert => [ "source.nat.port", "integer" ]
                convert => [ "panw.sequence_number", "integer" ]
				remove_field => [ "message", "host"]
		}
	}
	if [type] == "panw.datafiltering" {
		dissect {
      		mapping => {
			"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{event.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE},%{?panw.SCTP_association_ID},%{panw.payload_protocol_ID},%{http.headers}"
			}
    	}
		mutate {
				convert => [ "destination.port", "integer" ]
				convert => [ "source.port", "integer" ]
				convert => [ "panw.session_id", "integer" ]
				convert => [ "event.repeat_count", "integer" ]
                convert => [ "destination.nat.port", "integer" ]
                convert => [ "source.nat.port", "integer" ]
                convert => [ "panw.sequence_number", "integer" ]
				remove_field => [ "message", "host"]
		}
	}
	if [type] == "panw.userid" {
		dissect {
      		mapping => {
			"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.content_type},%{?FUTURE_USE},%{event.created},%{panw.virtual_system},%{source.ip},%{user.name},%{panw.data_source Name},%{panw.event_ID},%{event.repeat_count},%{panw.time_out_threshold},%{source.port},%{destination.port},%{panw.data_source},%{panw.data_source_type},%{panw.sequence_number},%{panw.action_flags},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{panw.virtual_system_ID},%{panw.factor_type},%{panw.factor_completion_time},%{panw.factor_number},%{?FUTURE_USE},%{?FUTURE_USE}"
			}
    	}
		mutate {
			convert => [ "destination.port", "integer" ]
			convert => [ "source.port", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
            convert => [ "destination.nat.port", "integer" ]
            convert => [ "source.nat.port", "integer" ]
            convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]		
		}
	}
	if [type] == "panw.tunnel" {
		dissect {
      		mapping => {
			"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.subtype},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{event.severity},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel},%{network.bytes},%{destination.bytes},%{source.bytes},%{network.packets},%{destination.packets},%{panw.maximum_encapsulation},%{panw.unknown_protocol},%{panw.strict_check},%{panw.tunnel_fragment},%{panw.session_created},%{panw.session_closed},%{panw.session_end_reason},%{panw.action_source},%{panw.session_start_time},%{event.duration},%{panw.tunnel_inspection_rule}"
			}
    	}
		mutate {
            convert => [ "network.bytes", "integer" ]
            convert => [ "source.bytes", "integer" ]
            convert => [ "destination.bytes", "integer" ]
            convert => [ "event.duration", "integer" ]
			convert => [ "destination.port", "integer" ]
            convert => [ "source.port", "integer" ]
			convert => [ "panw.session_id", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
            convert => [ "destination.nat.port", "integer" ]
            convert => [ "source.nat.port", "integer" ]
            convert => [ "network.packets", "integer" ]
            convert => [ "source.packets", "integer" ]
            convert => [ "destination.packets", "integer" ]
            convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]	
		}
	}
	if [type] == "panw.HIPlog" {
		dissect {
			mapping => {
				"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{?Threat/Content Type},%{?FUTURE_USE},%{event.created},%{source.user.name},%{panw.virtual_system},%{Machine name},%{OS},%{Source Address},%{HIP_reportname},%{event.repeat_count},%{HIP Type},%{?FUTURE_USE},%{?FUTURE_USE},%{panw.sequence_number},%{panw.action_flags},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{Virtual System ID},%{IPv6 Source Address},%{Host ID},%{?FUTURE_USE}"
			}
		}
		mutate {
			convert => [ "event.repeat_count", "integer" ]
            convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]
		}
	}
	if [type] == "panos.config" {
		dissect {
			mapping => { 
				"message" =>"%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{?Subtype},%{?FUTURE_USE},%{event.created},%{panw.admin_ip},%{panw.virtual_system},%{panw.command},%{panw.admin_username},%{panw.from_CLI/Web},%{panw.cmd_result},%{panw.configuration_path},%{panw.before_change},%{panw.sequence_number},%{panw.action_flags},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE}"
			}
		}
		mutate {
		    convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]
		}
	}
	if [type] == "panos.system" {
		dissect {
			mapping => {
#    Sample                   <14>Mar 26 23:48:03 mah1mgmt.XStratum.net 1,2019/03/26 23:48:03,011901000306,SYSTEM,general,0,2019/03/26 23:48:03,,general,,0,0,general,informational,"Connection to Update server: updates.paloaltonetworks.com completed successfully, initiated by 192.168.54.251",3941525,0x0,0,0,0,0,,mah1mgmt
				"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.event_type},%{?FUTURE_USE},%{event.created},%{panw.virtual_system},%{panw.event_ID},%{panw.object},%{?FUTURE_USE},%{?FUTURE_USE},%{panw.module},%{event.severity},%{more}"
				"more" => '"%{event.description}",%{even_more}'
				"even_more" => "%{panw.sequence_number},%{panw.action_flags},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname}"
			}
		}
		mutate {
		    convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message","more","even_more","host" ]
		}
	}	
#  this is for traps ESM format 
	if [type] == "panw.traps" {
		dissect {
			mapping => {
# sample                     <134>1 2019-03-30T01:09:05.00Z-04:00 192.168.55.250 - - - Mar 30 2019 01:09:05,Traps ESM,4.2.3.41131,System,User Login,ESMDemo01,mharman,,,User mharman logged in to ESM console,3,,,,,			
				"message" => "%{?FUTURE_USE},%{panw.typetraps},%{panw.somenumber},%{panw.msg},%{panw.msgdetail},%{observer.hostname},%{user.name},%{?FUTURE_USE},%{?facility},%{event.description}"	
			}
		}
		mutate {
			remove_field => [ "message","host" ]
		}
	}
#
	if [source.ip] and [destination.ip] {
		fingerprint {
			concatenate_sources => true
			method => "SHA1"
			key => "logstash"
			source => ["source.ip", "destination.ip", "source.port", "destination.port", "network.protocol"]
		}
	}	
	metrics {
		meter => "events"
		add_tag => "metric"
	}
}
#
#
#
output {
	if [type] == "panw.traps" {
	elasticsearch {
				index => "panw.traps"
				hosts => "elasticsearch:9200"
		}
	}	
	if [type] == "panw.traffic" {
	elasticsearch {
		index => "panw.traffic"
		hosts => "elasticsearch:9200"
	}
	}
	if [type] == "panw.threat" {
	elasticsearch {
                index => "panw.threat"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.url" {
	elasticsearch {
                index => "panw.url"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.wildfire" {
	elasticsearch {
                index => "panw.wildfire"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.datafiltering" {
	elasticsearch {
                index => "panw.datafiltering"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.userid" {
	elasticsearch {
                index => "panw.userid"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.tunnel" {
	elasticsearch {
                index => "panw.tunnel"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.HIPlog" {
	elasticsearch {
                index => "panw.HIPlog"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panos.config" {
	elasticsearch {
                index => "panos.config"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panos.system" {
	elasticsearch {
                index => "panos.system"
                hosts => "elasticsearch:9200"
		}
	}
}