# Add Elasticsearch Ingest Node conditional pipeline for routing incoming PANW data to ECS mapping

curl -XPUT localhost:9200/_ingest/pipeline/panw_ecs_routing_pipeline -H 'Content-Type: application/json' -d '
{
  "processors": [
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panw.traps')"
        "name": "panw_81_traps_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panw.traffic')"
        "name": "panw_81_traffic_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panw.threat')"
        "name": "panw_81_threat_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panw.url')"
        "name": "panw_81_url_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panw.wildfire')"
        "name": "panw_81_wildfire_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panw.datafiltering')"
        "name": "panw_81_datafiltering_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panw.userid')"
        "name": "panw_81_userid_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panw.tunnel')"
        "name": "panw_81_tunnel_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panw.hiplog')"
        "name": "panw_81_hiplog_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panos.config')"
        "name": "panos_config_ecs_pipeline"
      }
    },
    {
      "pipeline": {
        "if": "ctx._index.startsWith('panos.system')"
        "name": "panos_system_ecs_pipeline"
      }
    }
  ]
}