# panw logstash.conf version: beta0.0.2
# panos version: 9.0
# credits: sp-solutions@paloaltonetworks.com, Daren Presbitero and Mark Harman
#
# For more information on PANOS 9.0 syslog fields, use the following link
# 	https://docs.paloaltonetworks.com/pan-os/9-0/pan-os-admin/monitoring/use-syslog-for-monitoring/syslog-field-descriptions.html
#
# This file covers; traffic, threat, url, wildfire, tunnel, HIP Match, userID, 
#   system and config logs at this time.  to be added IP-tag,SCTP, GTP, Correlated
#   and Authentication logs
#
# Escape sequences note from panos docs: Any field that contains a comma or a 
#   double-quote is enclosed in double quotes. Furthermore, if a double-quote 
#   appears inside a field it is escaped by preceding it with another 
#   double-quote. To maintain backward compatibility, the Misc field in threat 
#   log is always enclosed in double-quotes.
# 
# Dev notes: 
#  Each syslog stream is it's own separate udp port.  Tthis can be changed to 
#  suit your enviroment.  Having separate allows future break outs into things
#  like pipelines or funneling different log types to different ES instances. 
#

input {	
	udp {
		port => 5549
		type => "panw.traps"
	}	
	udp {
		port => 5550
		type => "panw.traffic"
	}
	udp {
		port => 5551
		type => "panw.threat"
	}
	udp {
		port => 5552
		type => "panw.url"
	}
	udp {
		port => 5553
		type => "panw.wildfire"
	}
	udp {
		port => 5554
		type => "panw.datafiltering"
	}
	udp {
		port => 5555
		type => "panw.userid"
	}
	udp {
		port => 5556
		type => "panw.tunnel"
	}
	udp {
		port => 5557
		type => "panw.HIPlog"
	}
	udp {
		port => 5558
		type => "panos.system"
	}
	udp {
		port => 5559
		type => "panos.config"
	}		
}

filter {
	# First thing is to figure out what version the NGFW is running.  These lists
	# are manually updated here.  Put the serial number of the NGFW in the list that 
	# corresponds to the main version listed.  
	grok  {   
		match => { "message" => "%{?FUTURE_USE},%{DATA:panw.rcv_time_control_plane},%{DATA:observer.serial_number},%{GREEDYDATA:drop}" }   
    }

	if [observer.serial_number] in [1111111,12121212] {
		mutate { add_field => { "observer.os.version" => "7.1" } }
	} else if [observer.serial_number] in [1111113,12121213] {
		mutate { add_field => { "observer.os.version" => "8.0" } }
	} else if [observer.serial_number] in [1111114,12121214] {
		mutate { add_field => { "observer.os.version" => "8.1" } }
	} else {
		mutate { add_field => { "observer.os.version" => "9.0" } }
	}

	# Create the obligatory ECS related fields needed
	mutate {
		add_field => { "ecs.version" => "1.2.0"}
		add_field => { "observer.type" => "firewall" }
		add_field => { "observer.vendor" => "Palo Alto Networks"}
	}
	if [type] == "panw.traffic" {
		if [observer.os.version] == "7.1" {
        	dissect { mapping => { "message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.log_subtype},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.port_nat},%{destination.port_nat},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.port_nat},%{destination.port_nat},%{panw.flags},%{network.protocol},%{event.action},%{network.bytes},%{network.bytes_sent},%{network.bytes_received},%{network.packets},%{panw.session.start_time},%{event.duration},%{url.category},%{?FUTURE_USE},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{network.packets_sent},%{network.packets_received},%{panw.session_end_reason},%{panw.device_group_hierarchy_level_1},%{panw.device_group_hierarchy_level_2},%{panw.device_group_hierarchy_level_3},%{panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{panw.action_source}" } }
        } else if [observer.os.version] == "8.0" {
            dissect { mapping => { "message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.log_subtype},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.port_nat},%{destination.port_nat},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.port_nat},%{destination.port_nat},%{panw.flags},%{network.protocol},%{event.action},%{network.bytes},%{network.bytes_sent},%{network.bytes_received},%{network.packets},%{panw.session.start_time},%{event.duration},%{url.category},%{?FUTURE_USE},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{network.packets_sent},%{network.packets_received},%{panw.session_end_reason},%{panw.device_group_hierarchy_level_1},%{panw.device_group_hierarchy_level_2},%{panw.device_group_hierarchy_level_3},%{panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{panw.action_source},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type}" } }
        } else {  # Treating 8.1 and 9.0 the same for now
			dissect { mapping => { "message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.log_subtype},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{network.bytes},%{destination.bytes},%{source.bytes},%{network.packets},%{panw.session_start_time},%{event.duration},%{url.category},%{?FUTURE_USE},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{destination.packets},%{source.packets},%{panw.session_end_reason},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{panw.action_source},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{?panw.SCTP_association_ID},%{?panw.SCTP_chunks},%{?panw.SCTP_chunks_sent},%{?panw.SCTP_chunks_received}" } }
		}
		mutate {
			add_field => { "event.dataset" => "panw.traffic" }
			convert => [ "network.bytes", "integer" ]
			convert => [ "source.bytes", "integer" ]
			convert => [ "destination.bytes", "integer" ]
			convert => [ "event.duration", "integer" ]
			convert => [ "destination.port", "integer" ]
			convert => [ "source.port", "integer" ]
			convert => [ "panw.session_id", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
			convert => [ "destination.nat.port", "integer" ]
			convert => [ "source.nat.port", "integer" ]
			convert => [ "network.packets", "integer" ]
			convert => [ "source.packets", "integer" ]
			convert => [ "destination.packets", "integer" ]
			convert => [ "panw.sequence_number", "integer" ]
			#remove_field => [ "message", "host"]
		}
	}
	if [type] == "panw.threat" {
		
		if [observer.os.version] == "7.1" {
			dissect { mapping => { "message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{network.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE}" } }
		} else if [observer.os.version] == "8.0" {
			dissect { mapping => { "message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{network.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE}" } }
        } else {  # Treating 8.1 and 9.0 the same for now
			dissect { mapping => { "message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{network.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE},%{?panw.SCTP_association_ID},%{panw.payload_protocol_ID},%{http.headers}" } }
		}
		mutate {
			add_field => { "event.dataset" => "panw.threat" }
			convert => [ "destination.port", "integer" ]
			convert => [ "source.port", "integer" ]
			convert => [ "panw.session_id", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
			convert => [ "destination.nat.port", "integer" ]
			convert => [ "source.nat.port", "integer" ]
			convert => [ "panw.sequence_number", "integer" ]
			#remove_field => [ "message", "host"]
		}
	}
	if [type] == "panw.url" {
		dissect {
			mapping => { "message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{network.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE},%{?panw.SCTP_association_ID},%{panw.payload_protocol_ID},%{?FUTURE_USE},%{url.category1},%{url.category2},%{?FUTURE_USE}" }
		}
		mutate {
			add_field => { "event.dataset" => "panw.url" }
			# Remove double quotes from URL values
			gsub => [ "url.full", "\"","\" "]
			gsub => [ "url.category1", "\"", "\"" ]
			gsub => [ "url.category2", "\"", "\""]				
			convert => [ "destination.port", "integer" ]
			convert => [ "source.port", "integer" ]
			convert => [ "panw.session_id", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
			convert => [ "destination.nat.port", "integer" ]
			convert => [ "source.nat.port", "integer" ]
			convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]
		}
	}

	if [type] == "panw.wildfire" {
		dissect {
      		mapping => {
			"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{network.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE},%{?panw.SCTP_association_ID},%{panw.payload_protocol_ID},%{http.headers}"
			}
    	}
		mutate {
			add_field => { "event.dataset" => "panw.wildfire" }
			convert => [ "destination.port", "integer" ]
			convert => [ "source.port", "integer" ]
			convert => [ "panw.session_id", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
			convert => [ "destination.nat.port", "integer" ]
			convert => [ "source.nat.port", "integer" ]
			convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]
		}
	}
	if [type] == "panw.datafiltering" {
		dissect {
      		mapping => {
			"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.threat_type},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{url.full},%{panw.threat_ID},%{url.category},%{event.severity},%{network.direction},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?FUTURE_USE},%{panw.content_type},%{panw.PCAP_ID},%{panw.file_digest},%{panw.cloud},%{url.index},%{panw.user_agent},%{panw.file_type},%{panw.X_forwarded_for},%{panw.referrer},%{panw.sender},%{panw.subject},%{panw.recipient},%{panw.report_ID},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE},%{panw.source_VM_UUID},%{panw.destination_VM_UUID},%{http.request.method},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel_type},%{panw.threat_category},%{panw.content_version},%{?FUTURE_USE},%{?panw.SCTP_association_ID},%{panw.payload_protocol_ID},%{http.headers}"
			}
    	}
		mutate {
			add_field => { "event.dataset" => "panw.datafiltering" }
			convert => [ "destination.port", "integer" ]
			convert => [ "source.port", "integer" ]
			convert => [ "panw.session_id", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
			convert => [ "destination.nat.port", "integer" ]
			convert => [ "source.nat.port", "integer" ]
			convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]
		}
	}

	if [type] == "panw.userid" {
		dissect {
      		mapping => {
			"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.content_type},%{?FUTURE_USE},%{event.created},%{panw.virtual_system},%{source.ip},%{user.name},%{panw.data_source Name},%{panw.event_ID},%{event.repeat_count},%{panw.time_out_threshold},%{source.port},%{destination.port},%{panw.data_source},%{panw.data_source_type},%{panw.sequence_number},%{panw.action_flags},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{panw.virtual_system_ID},%{panw.factor_type},%{panw.factor_completion_time},%{panw.factor_number},%{?FUTURE_USE},%{?FUTURE_USE}"
			}
    	}
		mutate {
			add_field => { "event.dataset" => "panw.userid" }
			convert => [ "destination.port", "integer" ]
			convert => [ "source.port", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
            convert => [ "destination.nat.port", "integer" ]
            convert => [ "source.nat.port", "integer" ]
            convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]		
		}
	}

	if [type] == "panw.tunnel" {
		dissect {
      		mapping => {
			"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.subtype},%{?FUTURE_USE},%{event.created},%{source.ip},%{destination.ip},%{source.nat.ip},%{destination.nat.ip},%{panw.rule_name},%{source.user.name},%{destination.user.name},%{network.application},%{panw.virtual_system},%{source.zone},%{destination.zone},%{panw.inbound_interface},%{panw.outbound_interface},%{panw.log_action},%{?FUTURE_USE},%{panw.session_id},%{event.repeat_count},%{source.port},%{destination.port},%{source.nat.port},%{destination.nat.port},%{panw.flags},%{network.protocol},%{event.action},%{event.severity},%{panw.sequence_number},%{panw.action_flags},%{source.geo.country_name},%{destination.geo.country_name},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{panw.tunnel_ID/IMSI},%{panw.monitor_tag/IMEI},%{panw.parent_session_ID},%{panw.parent_start_time},%{panw.tunnel},%{network.bytes},%{destination.bytes},%{source.bytes},%{network.packets},%{destination.packets},%{panw.maximum_encapsulation},%{panw.unknown_protocol},%{panw.strict_check},%{panw.tunnel_fragment},%{panw.session_created},%{panw.session_closed},%{panw.session_end_reason},%{panw.action_source},%{panw.session_start_time},%{event.duration},%{panw.tunnel_inspection_rule}"
			}
    	}
		mutate {
			add_field => { "event.dataset" => "panw.tunnel" }
            convert => [ "network.bytes", "integer" ]
            convert => [ "source.bytes", "integer" ]
            convert => [ "destination.bytes", "integer" ]
            convert => [ "event.duration", "integer" ]
			convert => [ "destination.port", "integer" ]
            convert => [ "source.port", "integer" ]
			convert => [ "panw.session_id", "integer" ]
			convert => [ "event.repeat_count", "integer" ]
            convert => [ "destination.nat.port", "integer" ]
            convert => [ "source.nat.port", "integer" ]
            convert => [ "network.packets", "integer" ]
            convert => [ "source.packets", "integer" ]
            convert => [ "destination.packets", "integer" ]
            convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]	
		}
	}

	if [type] == "panw.HIPlog" {
		dissect {
			mapping => {
				"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{?Threat/Content Type},%{?FUTURE_USE},%{event.created},%{source.user.name},%{panw.virtual_system},%{Machine name},%{OS},%{Source Address},%{HIP_reportname},%{event.repeat_count},%{HIP Type},%{?FUTURE_USE},%{?FUTURE_USE},%{panw.sequence_number},%{panw.action_flags},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{Virtual System ID},%{IPv6 Source Address},%{Host ID},%{?FUTURE_USE}"
			}
		}
		mutate {
			add_field => { "event.dataset" => "panw.HIP" }
			convert => [ "event.repeat_count", "integer" ]
            convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]
		}
	}

	if [type] == "panos.config" {
		dissect {
			mapping => { 
				"message" =>"%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{?Subtype},%{?FUTURE_USE},%{event.created},%{panw.admin_ip},%{panw.virtual_system},%{panw.command},%{panw.admin_username},%{panw.from_CLI/Web},%{panw.cmd_result},%{panw.configuration_path},%{panw.before_change},%{panw.sequence_number},%{panw.action_flags},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname},%{?FUTURE_USE}"
			}
		}
		mutate {
			add_field => { "event.dataset" => "panos.config" }
		    convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message", "host"]
		}
	}

	if [type] == "panos.system" {
		dissect {
			mapping => {
            #SAMPLE:
			#<14>Mar 26 23:48:03 mah1mgmt.XStratum.net 1,2019/03/26 23:48:03,011901000306,SYSTEM,general,0,2019/03/26 23:48:03,,general,,0,0,general,informational,"Connection to Update server: updates.paloaltonetworks.com completed successfully, initiated by 192.168.54.251",3941525,0x0,0,0,0,0,,mah1mgmt
				"message" => "%{?FUTURE_USE},%{panw.rcv_time_control_plane},%{observer.serial_number},%{?Log Type},%{panw.event_type},%{?FUTURE_USE},%{event.created},%{panw.virtual_system},%{panw.event_ID},%{panw.object},%{?FUTURE_USE},%{?FUTURE_USE},%{panw.module},%{event.severity},%{more}"
				"more" => '"%{event.description}",%{even_more}'
				"even_more" => "%{panw.sequence_number},%{panw.action_flags},%{?panw.device_group_hierarchy_level_1},%{?panw.device_group_hierarchy_level_2},%{?panw.device_group_hierarchy_level_3},%{?panw.device_group_hierarchy_level_4},%{panw.virtual_system_name},%{observer.hostname}"
			}
		}
		mutate {
			add_field => { "event.dataset" => "panos.system" }
		    convert => [ "panw.sequence_number", "integer" ]
			remove_field => [ "message","more","even_more","host" ]
		}
	}	

	#  Traps ESM format 
	#  TODO: Restructure to have this checked first in an if/else block so we don't 
	#        check 10 other types before getting here. 
	if [type] == "panw.traps" {
		dissect {
			mapping => {
				# SAMPLE
				# <134>1 2019-03-30T01:09:05.00Z-04:00 192.168.55.250 - - - Mar 30 2019 01:09:05,Traps ESM,4.2.3.41131,System,User Login,ESMDemo01,mharman,,,User mharman logged in to ESM console,3,,,,,			
				"message" => "%{?FUTURE_USE},%{panw.typetraps},%{panw.somenumber},%{panw.msg},%{panw.msgdetail},%{observer.hostname},%{user.name},%{?FUTURE_USE},%{?facility},%{event.description}"	
			}
		}
		mutate {
			add_field => { "event.dataset" => "panw.traps" }
			remove_field => [ "message","host" ]
		}
	}

	if [source.ip] and [destination.ip] {
		fingerprint {
			concatenate_sources => true
			method => "SHA1"
			key => "logstash"
			source => ["source.ip", "destination.ip", "source.port", "destination.port", "network.protocol"]
		}
	}	
	metrics {
		meter => "events"
		add_tag => "metric"
	}
}


output {
	if [type] == "panw.traps" {
	elasticsearch {
				index => "panw.traps-%{+YYYY.MM.dd}"
				hosts => "elasticsearch:9200"
		}
	}	
	if [type] == "panw.traffic" {
	elasticsearch {
		index => "panw.traffic-%{+YYYY.MM.dd}"
		hosts => "elasticsearch:9200"
	}
	}
	if [type] == "panw.threat" {
	elasticsearch {
                index => "panw.threat-%{+YYYY.MM.dd}"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.url" {
	elasticsearch {
                index => "panw.url-%{+YYYY.MM.dd}"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.wildfire" {
	elasticsearch {
                index => "panw.wildfire-%{+YYYY.MM.dd}"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.datafiltering" {
	elasticsearch {
                index => "panw.datafiltering-%{+YYYY.MM.dd}"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.userid" {
	elasticsearch {
                index => "panw.userid-%{+YYYY.MM.dd}"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.tunnel" {
	elasticsearch {
                index => "panw.tunnel-%{+YYYY.MM.dd}"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panw.HIPlog" {
	elasticsearch {
                index => "panw.HIPlog-%{+YYYY.MM.dd}"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panos.config" {
	elasticsearch {
                index => "panos.config-%{+YYYY.MM.dd}"
                hosts => "elasticsearch:9200"
		}
	}
	if [type] == "panos.system" {
	elasticsearch {
                index => "panos.system-%{+YYYY.MM.dd}"
                hosts => "elasticsearch:9200"
		}
	}
stdout { codec => rubydebug }
}
